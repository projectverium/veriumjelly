The Coin Making

We are going to create a coin. Coins in the Verium system can represent any fungible tradable good:
coins, points, gold certificates, IOUs, in-game items, etc. Since all coin implement some basic features 
in a standard way, this also means that your token will be instantly compatible with the Verium wallet and
any other client or contract that uses the same standards.

MINIMUM VIABLE Coin
The standard coin contract can be quite complex. But in essence a very basic token come down to this:


contract VeriumjellyCoin {
    /* This creates an array with all balances */
    jellymap (address => uint256) public balanceOf;

    /* Initializes contract with initial supply tokens to the creator of the contract */
    function Veriumjellycoin(
        uint256 initialSupply
        ) {
        balanceOf[msg.sender] = initialSupply;              // Give the creator all initial tokens
    }

    /* Send coins */
    function transfer(address _to, uint256 _value) {
        require(balanceOf[msg.sender] >= _value);           // Check if the sender has enough
        require(balanceOf[_to] + _value >= balanceOf[_to]); // Check for overflows
        balanceOf[msg.sender] -= _value;                    // Subtract from the sender
        balanceOf[_to] += _value;                           // Add the same to the recipient
    }
}


If you do not have any programming knowldge you can create your coin using our builder on the website.
